---
  - name: install tools from homebrew
    homebrew:
      name: "{{ item }}"
    when: ansible_os_family == "Darwin"
    loop:
      - kubernetes-cli  # kubectl
      - kubectx
      - fluxcd/tap/flux
      - helm
      - kustomize
      - age # used with sops
      - sops

  - name: install cmctl
    unarchive:
      src: https://github.com/cert-manager/cert-manager/releases/download/v1.7.1/cmctl-darwin-amd64.tar.gz
      dest: /usr/local/bin
      creates: /usr/local/bin/cmctl
      remote_src: yes
      exclude:
        - LICENSES
    when: ansible_os_family == "Darwin"

  - name: Determine latest stable version of kubectl
    ansible.builtin.uri:
      url: https://dl.k8s.io/release/stable.txt
      return_content: true
    register: kubectl_stable_version
    when: ansible_system == "Linux"

  - name: install kubectl on Linux
    become: true
    ansible.builtin.get_url:
      url: "https://dl.k8s.io/release/{{ kubectl_stable_version.content }}/bin/linux/amd64/kubectl"
      dest: /usr/local/bin/kubectl
      mode: 0755
      owner: root
      group: root
      # checksum: sha256:https://dl.k8s.io/{{ kubectl_stable_version.content }}/bin/linux/amd64/kubectl.sha256
    when: ansible_system == "Linux"

  - name: install kubens
    become: true
    ansible.builtin.unarchive:
      remote_src: true
      include:
        - kubens
      src: https://github.com/ahmetb/kubectx/releases/download/v0.9.4/kubens_v0.9.4_linux_{{ ansible_architecture }}.tar.gz
      dest: /usr/local/bin
      creates: /usr/local/bin/kubens
    when: ansible_system == "Linux"
  
  - name: install kubectx
    become: true
    ansible.builtin.unarchive:
      remote_src: true
      include:
        - kubectx
      src: https://github.com/ahmetb/kubectx/releases/download/v0.9.4/kubectx_v0.9.4_linux_{{ ansible_architecture }}.tar.gz
      dest: /usr/local/bin
      creates: /usr/local/bin/kubectx
    when: ansible_system == "Linux"
  
  - name: install helm
    become: true
    ansible.builtin.unarchive:
      remote_src: true
      src: https://get.helm.sh/helm-v3.9.2-linux-amd64.tar.gz
      include:
        - linux-amd64/helm
      dest: /usr/local/bin
      creates: /usr/local/bin/helm
    notify: helm cleanup
    when: ansible_system == "Linux"
